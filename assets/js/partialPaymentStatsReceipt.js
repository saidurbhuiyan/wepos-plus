(()=>{var __webpack_modules__={"./assets/src/utils/partialPaymentStatsReceipt.js":
/*!********************************************************!*\
  !*** ./assets/src/utils/partialPaymentStatsReceipt.js ***!
  \********************************************************/()=>{eval("// upload pdf\nasync function uploadPDF(pdfBlob, filename) {\n  const formData = new FormData();\n  formData.append('file', pdfBlob, filename);\n\n  // Check for existing PDF by filename\n  try {\n    const response = await fetch(weposData.mediaUrl + '?search=' + filename, {\n      method: 'GET',\n      headers: {\n        'X-WP-Nonce': weposData.nonce // Send the nonce here\n      }\n    });\n    const data = await response.json();\n    if (data.length > 0 && data[0].media_details.filesize === formData.get('file').size) {\n      return data[0].source_url;\n    }\n    if (data.length > 0) {\n      await deletePDF(data[0].id);\n    }\n    return await createPDF(formData);\n  } catch (error) {\n    console.error('Error:', error);\n  }\n}\nasync function deletePDF(pdfId) {\n  try {\n    const response = await fetch(weposData.mediaUrl + ` / ${pdfId} ? force = true`, {\n      method: 'DELETE',\n      headers: {\n        'X-WP-Nonce': weposData.nonce // Include the nonce in the request headers\n      }\n    });\n    const data = await response.json();\n    return data.deleted;\n  } catch (error) {\n    console.error('Error:', error);\n  }\n}\nasync function createPDF(formData) {\n  try {\n    const response = await fetch(weposData.mediaUrl, {\n      method: 'POST',\n      headers: {\n        'X-WP-Nonce': weposData.nonce // Include the nonce in the request headers\n      },\n      body: formData\n    });\n    const data = await response.json();\n    return data.source_url;\n  } catch (error) {\n    console.error('Error:', error);\n  }\n}\n\n// generate receipt pdf\nasync function generateReceiptPDF(printdata, settings, partialPaymentId, actionType = 'generate-receipt', phoneNumber = null) {\n  const {\n    jsPDF\n  } = window.jspdf;\n  const doc = new jsPDF({\n    orientation: 'p',\n    unit: 'mm',\n    format: 'a4'\n  });\n  let yPosition = 20;\n  doc.setFontSize(8);\n  doc.setFont(\"Helvetica\", \"normal\");\n\n  // Add customer Header\n  let bPosition = yPosition;\n  if (printdata.billing) {\n    const billingFields = [{\n      condition: printdata.customer_id,\n      text: 'Customer ID: #' + printdata.customer_id\n    }, {\n      condition: printdata.billing.first_name || printdata.billing.last_name,\n      text: (printdata.billing.first_name || '') + ' ' + (printdata.billing.last_name || '')\n    }, {\n      condition: printdata.billing.email,\n      text: printdata.billing.email\n    }, {\n      condition: printdata.billing.phone,\n      text: 'Phone: ' + printdata.billing.phone\n    }, {\n      condition: printdata.billing.nif,\n      text: 'NIF: ' + printdata.billing.nif\n    }, {\n      condition: printdata.billing.address_1,\n      text: printdata.billing.address_1\n    }];\n\n    // Iterate over each field and print if it exists\n    billingFields.forEach(field => {\n      if (field.condition) {\n        yPosition += 5;\n        doc.text(field.text, 11, yPosition);\n      }\n    });\n  }\n\n  // Add company Header\n  if (settings.wepos_receipts && settings.wepos_receipts.receipt_header) {\n    const tempDiv = document.createElement('div');\n    tempDiv.innerHTML = settings.wepos_receipts.receipt_header.trim();\n    const companyInfo = Array.from(tempDiv.querySelectorAll('p')).map(p => p.textContent.trim());\n    if (companyInfo.length > 0) {\n      companyInfo.forEach(info => {\n        bPosition += 5;\n        doc.text(info, 198, bPosition, {\n          align: 'right'\n        });\n      });\n    }\n  }\n\n  // Add Order Info\n  yPosition = (yPosition < bPosition ? bPosition : yPosition) + 10;\n  doc.text(`Order ID: #${printdata.id}`, 11, yPosition);\n  doc.text(`Order Date: ${new Date(printdata.date_created).toLocaleString()}`, 198, yPosition, {\n    align: 'right'\n  });\n\n  // Divider\n  yPosition += 5;\n  doc.setLineDash([1, 1], 0);\n  doc.setLineWidth(0, 5);\n  doc.line(10, yPosition, 200, yPosition);\n  yPosition += 10;\n\n  // Add Line Items\n  doc.setFont(\"Helvetica\", \"bold\");\n  doc.text('Product', 11, yPosition);\n  doc.text('Price', 100, yPosition, {\n    align: 'center'\n  });\n  doc.text('Quantity', 145, yPosition, {\n    align: 'center'\n  });\n  doc.text('Total', 198, yPosition, {\n    align: 'right'\n  });\n  const expiryData = printdata.meta_data?.find(item => item.key === '_wepos_product_expiry_data')?.value;\n  printdata.line_items.forEach(item => {\n    var _coupon$nominal_amoun;\n    doc.setFontSize(8);\n    yPosition += 5;\n    doc.setFont(\"Helvetica\", \"bold\");\n    doc.text(item.name, 11, yPosition);\n    doc.setFont(\"Helvetica\", \"normal\");\n    doc.text(formatPrice(item.price), 100, yPosition, {\n      align: 'center'\n    });\n    doc.text(`${item.quantity}`, 145, yPosition, {\n      align: 'center'\n    });\n    doc.text(formatPrice(item.subtotal), 198, yPosition, {\n      align: 'right'\n    });\n    doc.setFontSize(7);\n    // Add attributes\n    if (item.meta_data && item.meta_data.length > 0) {\n      let previousWidth = 12;\n      item.meta_data.forEach(attribute_item => {\n        if (attribute_item.key.startsWith(\"pa_\")) {\n          yPosition += 2;\n          // Set color for the display key\n          doc.setTextColor(117, 133, 152); // Gray color\n          doc.text(`${attribute_item.display_key}: `, previousWidth, yPosition, {\n            baseline: 'top'\n          });\n\n          // Get the width of the display key to set position for the value\n          const keyWidth = doc.getTextWidth(`${attribute_item.display_key}: `);\n\n          // Set color for the display value\n          doc.setTextColor(0, 0, 0); // Black color\n          doc.text(`${attribute_item.display_value}`, previousWidth + keyWidth, yPosition, {\n            baseline: 'top'\n          });\n          const valueWidth = doc.getTextWidth(`${attribute_item.display_value}: `);\n          previousWidth = previousWidth + keyWidth + valueWidth;\n        }\n      });\n    }\n\n    // Add Expiry\n    const expiry = expiryData?.find(data => parseInt(data?.product_id) === parseInt(item?.product_id))?.expiry;\n    if (expiry) {\n      yPosition += 7;\n      doc.setTextColor(117, 133, 152);\n      doc.text(`Expiry: `, 12, yPosition);\n      doc.setTextColor(0, 0, 0);\n      expiry.forEach(data => {\n        yPosition += 5;\n        doc.text(`${data.quantity}x ${formatDate(data.date, 'd/m/Y')}`, 14, yPosition);\n      });\n    }\n    const itemTotal = parseFloat(item.total);\n    const itemSubtotal = parseFloat(item.subtotal);\n    const discount = (itemSubtotal - itemTotal).toFixed(2);\n    const coupon = printdata.coupon_lines?.find(coupon => parseFloat(coupon.discount) === parseFloat(discount));\n    const perDiscount = ((_coupon$nominal_amoun = coupon?.nominal_amount) !== null && _coupon$nominal_amoun !== void 0 ? _coupon$nominal_amoun : discount / item.quantity).toFixed(2);\n    if (discount > 0) {\n      yPosition += 5;\n      doc.setTextColor(117, 133, 152);\n      doc.text(`Discount: -${formatPrice(discount) + (discount !== perDiscount ? ' (' + item.quantity + 'x' + perDiscount + ')' : '')}`, 12, yPosition);\n    }\n    doc.setTextColor(0, 0, 0);\n  });\n\n  // Add Subtotal\n  const total = parseFloat(printdata.total);\n  const discount = parseFloat(printdata.discount_total);\n  const subtotal = total + discount;\n  doc.setFont(\"Helvetica\", \"bold\");\n  doc.setFontSize(8);\n  yPosition += 10;\n  doc.text(`Subtotal:`, 11, yPosition);\n  doc.text(formatPrice(subtotal.toFixed(2)), 198, yPosition, {\n    align: 'right'\n  });\n\n  // Add Discounts, Fees, Tax, and Total\n  // Discount\n  if (printdata.coupon_lines && printdata.coupon_lines.length > 0) {\n    const fixedDiscount = printdata.coupon_lines.some(coupon => coupon.discount_type === \"fixed_product\");\n    yPosition += 5;\n    if (fixedDiscount) {\n      doc.text(`Discount:`, 11, yPosition);\n      doc.text(` - ${formatPrice(printdata.discount_total)}`, 198, yPosition, {\n        align: 'right'\n      });\n      ;\n    } else {\n      printdata.coupon_lines.forEach(fee => {\n        doc.text(`Discount:`, 11, yPosition);\n        doc.text(` - ${formatPrice(Math.abs(fee.discount))}`, 198, yPosition, {\n          align: 'right'\n        });\n      });\n    }\n  }\n\n  // Fees\n  if (printdata.fee_lines && printdata.fee_lines.length > 0) {\n    printdata.fee_lines.forEach(fee => {\n      yPosition += 5;\n      doc.text(`Fee:`, 11, yPosition);\n      doc.text(formatPrice(Math.abs(fee.fee)), 198, yPosition, {\n        align: 'right'\n      });\n    });\n  }\n\n  // Tax\n  if (printdata.total_tax > 0) {\n    yPosition += 5;\n    doc.text(`Tax:`, 11, yPosition);\n    doc.text(formatPrice(printdata.total_tax), 198, yPosition, {\n      align: 'right'\n    });\n  }\n\n  // Order Total\n  yPosition += 5;\n  doc.setFont(\"Helvetica\", \"bold\");\n  doc.text(`Order Total:`, 11, yPosition);\n  doc.text(formatPrice(printdata.total), 198, yPosition, {\n    align: 'right'\n  });\n\n  // Divider\n  yPosition += 10;\n  doc.setLineDash([1, 1], 0);\n  doc.setLineWidth(0, 5);\n  doc.line(10, yPosition, 200, yPosition);\n  yPosition += 10;\n\n  // Vendor Type\n  let vendorType = printdata.meta_data.find(data => data.key === '_wepos_vendor_type');\n  vendorType = vendorType && vendorType.value ? vendorType.value : 'regular';\n  doc.setFont(\"Helvetica\", \"normal\");\n  doc.text('Vendor Type:', 10, yPosition);\n  doc.text(vendorType.charAt(0).toUpperCase() + vendorType.slice(1), 198, yPosition, {\n    align: 'right'\n  });\n\n  // Payment Method\n  yPosition += 5;\n  doc.setFont(\"Helvetica\", \"normal\");\n  doc.text('Payment method:', 10, yPosition);\n  doc.text(printdata.current_payment.method || 'Cash', 198, yPosition, {\n    align: 'right'\n  });\n\n  // Payment Type\n  yPosition += 5;\n  doc.text('Payment Type:', 10, yPosition);\n  doc.text(printdata.meta_data.some(data => data.key === '_wepos_cash_payment_type' && data.value === 'partial') ? 'Partial Payment' : 'Full Payment', 198, yPosition, {\n    align: 'right'\n  });\n\n  // Payment Date\n  yPosition += 5;\n  doc.text('Payment Date:', 10, yPosition);\n  doc.text(formatDate(printdata.current_payment.date_created), 198, yPosition, {\n    align: 'right'\n  });\n  if (parseFloat(printdata.current_payment.paid) > 0) {\n    // total Paid/Due Amount\n    // Paid Amount\n    yPosition += 5;\n    doc.setFont(\"Helvetica\", \"bold\");\n    doc.text('Paid Amount:', 10, yPosition);\n    doc.text(formatPrice(parseFloat(printdata.current_payment.paid).toFixed(2)), 198, yPosition, {\n      align: 'right'\n    });\n  }\n  printdata.past_payment = printdata.past_payment.filter(payment => parseFloat(payment.paid) > 0);\n  // past Payments stats\n  if (printdata.past_payment && printdata.past_payment.length > 0) {\n    // Divider\n    yPosition += 10;\n    doc.setLineDash([1, 1], 0);\n    doc.setLineWidth(0, 5);\n    doc.line(10, yPosition, 200, yPosition);\n    yPosition += 10;\n    doc.setFont(\"Helvetica\", \"bold\");\n    doc.text('Past Payments:', 11, yPosition);\n    doc.setFont(\"Helvetica\", \"normal\");\n    printdata.past_payment.forEach(payment => {\n      var _payment$method;\n      yPosition += 5;\n      doc.text(formatDate(payment.date_created) + ' (' + capitalizeFirstLetter((_payment$method = payment.method) !== null && _payment$method !== void 0 ? _payment$method : 'cash') + ')', 13, yPosition);\n      doc.text(formatPrice(parseFloat(payment.paid).toFixed(2)), 198, yPosition, {\n        align: 'right'\n      });\n    });\n  }\n  if (printdata.total_refund > 0) {\n    // Divider\n    yPosition += 10;\n    doc.setLineDash([1, 1], 0);\n    doc.setLineWidth(0, 5);\n    doc.line(10, yPosition, 200, yPosition);\n    yPosition += 5;\n  }\n  if (printdata.refund > 0) {\n    yPosition += 5;\n    doc.text(`Refunded:`, 11, yPosition);\n    doc.text(formatPrice(printdata.refund), 198, yPosition, {\n      align: 'right'\n    });\n  }\n\n  // Refunded Total\n  const total_paid = parseFloat(printdata.total) - parseFloat(printdata.total_refund);\n  if (printdata.total_refund > 0) {\n    yPosition += 5;\n    doc.text(`Total Refunded:`, 11, yPosition);\n    doc.text(formatPrice(printdata.total_refund), 198, yPosition, {\n      align: 'right'\n    });\n    yPosition += 5;\n    doc.text(`Net Payment:`, 11, yPosition);\n    doc.text(formatPrice(total_paid), 198, yPosition, {\n      align: 'right'\n    });\n  }\n\n  // Divider\n  yPosition += 10;\n  doc.setLineDash([1, 1], 0);\n  doc.setLineWidth(0, 5);\n  doc.line(10, yPosition, 200, yPosition);\n  yPosition += 10;\n\n  // total Paid\n  const total_partial_paid = parseFloat(printdata.total_partial_paid) > total_paid ? total_paid : printdata.total_partial_paid;\n  doc.setFont(\"Helvetica\", \"bold\");\n  doc.text('Total Paid:', 10, yPosition);\n  doc.text(formatPrice(total_partial_paid), 198, yPosition, {\n    align: 'right'\n  });\n  if (printdata.payment_method === 'wepos_cash' && printdata.meta_data.some(data => data.key === '_wepos_cash_payment_type' && data.value === 'partial') && printdata.total_partial_due > 0) {\n    // total Due\n    yPosition += 5;\n    doc.text('Total Due:', 10, yPosition);\n    doc.text(formatPrice(printdata.total_partial_due), 198, yPosition, {\n      align: 'right'\n    });\n  }\n  if (printdata.total_partial_due <= 0) {\n    yPosition += 5;\n    doc.text('Payment Status:', 10, yPosition);\n    doc.text('Fully Paid', 198, yPosition, {\n      align: 'right'\n    });\n  }\n  yPosition += 25;\n  doc.setFont(\"Helvetica\", \"normal\");\n  doc.setLineDash([]);\n  doc.setLineWidth(0.2, 5);\n  doc.line(8, yPosition, 28, yPosition);\n  doc.text('Prepared by', 10, yPosition + 4, {\n    align: 'left'\n  });\n  doc.setFont(\"Helvetica\", \"normal\");\n  doc.setLineDash([]);\n  doc.setLineWidth(0.2, 5);\n  doc.line(90, yPosition, 110, yPosition);\n  doc.text('Delivered by', 100, yPosition + 4, {\n    align: 'center'\n  });\n  doc.setFont(\"Helvetica\", \"normal\");\n  doc.setLineDash([]);\n  doc.setLineWidth(0.2, 5);\n  doc.line(180, yPosition, 200, yPosition);\n  doc.text('Reviewed by', 198, yPosition + 4, {\n    align: 'right'\n  });\n\n  // Add Footer\n  if (settings.wepos_receipts && settings.wepos_receipts.receipt_footer) {\n    const pageSize = doc.internal.pageSize;\n    const pageHeight = pageSize.height ? pageSize.height : pageSize.getHeight();\n    const tempDiv = document.createElement('div');\n    tempDiv.innerHTML = settings.wepos_receipts.receipt_footer.trim();\n    const companyInfo = Array.from(tempDiv.querySelectorAll('p')).map(p => p.textContent.trim());\n    if (companyInfo.length > 0) {\n      companyInfo.forEach(info => {\n        doc.text(info, 100, pageHeight - 10, {\n          align: 'center'\n        });\n      });\n    }\n  }\n\n  // Open PDF in new tab\n  const pdfBlob = doc.output('blob');\n  // upload or replace PDF\n  const pdfUrl = await uploadPDF(pdfBlob, 'receipt-order-' + printdata.id + '-' + partialPaymentId + '.pdf');\n  // const pdfUrl = URL.createObjectURL(pdfBlob);\n  // Open PDF in new tab as default action\n  let actionUrl = pdfUrl;\n  // share to whatsapp\n  if (actionType === 'share-whatsapp') {\n    const whatsappMessage = encodeURIComponent(\"Check out Your Order Receipt: \" + pdfUrl);\n    actionUrl = `https://api.whatsapp.com/send?text=${whatsappMessage}`;\n    if (phoneNumber && phoneNumber !== '') {\n      phoneNumber = phoneNumber.replaceAll('+', '');\n      actionUrl += `&phone=${phoneNumber}`;\n    }\n  }\n  if (actionType === 'share-email') {\n    const emailSubject = encodeURIComponent(\"Your Order Receipt\");\n    const emailBody = encodeURIComponent(\"Hello,\\n\\nPlease check out your order receipt attached: \" + pdfUrl);\n    actionUrl = `mailto:?subject=${emailSubject}&body=${emailBody}`;\n  }\n\n  // Open PDF in new tab in preferred action\n  window.open(actionUrl, \"_blank\");\n}\n\n// Format price\nfunction formatPrice(amount) {\n  return new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n    currency: 'EUR'\n  }).format(amount);\n}\n\n// Convert WP format to DayJS format\nfunction formatDate(dateString, format = null) {\n  const date = new Date(dateString);\n\n  // Mapping of PHP to JavaScript Intl options\n  const options = {\n    'F j, Y': {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    },\n    // March 10, 2024\n    'Y-m-d': {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit'\n    },\n    // 2024-03-10\n    'm/d/Y': {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit'\n    },\n    // 03/10/2024\n    'd/m/Y': {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit'\n    },\n    // 10/03/2024\n    'M j, Y': {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    },\n    // Mar 10, 2024\n    'jS F Y': {},\n    // 10th March 2024 (custom handling needed)\n    'l, F j, Y': {},\n    // Sunday, March 10, 2024 (custom handling)\n    'D, M j, Y': {},\n    // Sun, Mar 10, 2024 (custom handling)\n    'g:i a': {\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: true\n    },\n    // 3:00 pm\n    'g:i A': {\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: true\n    },\n    // 3:00 PM\n    'H:i': {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: false\n    },\n    // 15:00\n    'H:i:s': {\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n      hour12: false\n    } // 15:00:00\n  };\n\n  // Retrieve the desired format options\n  const formatOptions = options[partialPaymentData.dateFormat] || {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n\n  // Use Intl.DateTimeFormat to format the date\n  return new Intl.DateTimeFormat('en-US', format !== null && format !== void 0 ? format : formatOptions).format(date);\n}\n\n// Capitalize first letter\nfunction capitalizeFirstLetter(val) {\n  return String(val).charAt(0).toUpperCase() + String(val).slice(1);\n}\n\n// Search by ID\nfunction searchByID(currentID, partialPaymentStats) {\n  // Find the object with the current ID\n  const currentItem = partialPaymentStats.find(item => parseInt(item.ID) === parseInt(currentID));\n  if (!currentItem) {\n    // Return an empty object if no matching ID is found\n    return {\n      currentPayment: null,\n      pastPayment: []\n    };\n  }\n\n  // Find all past items with IDs less than the current ID\n  const pastItems = partialPaymentStats.filter(item => parseInt(item.ID) < parseInt(currentID)).sort((a, b) => parseInt(b.ID) - parseInt(a.ID));\n  return {\n    currentPayment: currentItem,\n    pastPayment: pastItems\n  };\n}\njQuery(document).ready(function ($) {\n  $('.partial-payment-stats').on('click', async function (e) {\n    var _partialReceipt$attr, _partialReceipt$attr2, _partialReceipt$attr3, _partialReceipt$attr4;\n    e.preventDefault();\n    if (!e.target.classList.contains('partial-receipt') && !e.target.parentNode.classList.contains('partial-receipt')) {\n      return;\n    }\n\n    // start process\n    let receiptAction = $(e.target.closest('#receipt-actions'));\n    let generateReceipt = $(receiptAction.siblings('#generating-receipt'));\n    generateReceipt.show();\n    receiptAction.hide();\n    let printData = {};\n    const partialReceipt = $(e.target.closest('.partial-receipt'));\n    const totalPartialPaid = parseFloat((_partialReceipt$attr = partialReceipt.attr('data-partial-paid')) !== null && _partialReceipt$attr !== void 0 ? _partialReceipt$attr : 0).toFixed(2);\n    const totalPartialDue = parseFloat((_partialReceipt$attr2 = partialReceipt.attr('data-partial-due')) !== null && _partialReceipt$attr2 !== void 0 ? _partialReceipt$attr2 : 0).toFixed(2);\n    const partialPaymentId = partialReceipt.attr('data-partial-payment-id');\n    const {\n      currentPayment,\n      pastPayment\n    } = searchByID(partialPaymentId, partialPaymentData.partialPaymentStats);\n    const actionType = partialReceipt.attr('data-action-type');\n    const refund = parseFloat((_partialReceipt$attr3 = partialReceipt.attr('data-partial-refund')) !== null && _partialReceipt$attr3 !== void 0 ? _partialReceipt$attr3 : 0).toFixed(2);\n    const totalRefund = parseFloat((_partialReceipt$attr4 = partialReceipt.attr('data-partial-total-refund')) !== null && _partialReceipt$attr4 !== void 0 ? _partialReceipt$attr4 : 0).toFixed(2);\n    try {\n      var _printData$billing$ph;\n      printData = await $.ajax({\n        type: 'POST',\n        url: `${weposData.orderUrl}/${partialPaymentData.orderId}`,\n        beforeSend: function (xhr) {\n          xhr.setRequestHeader('X-WP-Nonce', weposData.nonce); // Set nonce header for security\n        }\n      });\n      printData.total_partial_paid = totalPartialPaid;\n      printData.total_partial_due = totalPartialDue;\n      printData.current_payment = currentPayment;\n      printData.past_payment = pastPayment;\n      printData.refund = refund;\n      printData.total_refund = totalRefund;\n      const parser = new DOMParser(),\n        dom = parser.parseFromString(partialPaymentData.settings.wepos_receipts.receipt_header, \"text/html\");\n      let phoneNumber = (_printData$billing$ph = printData.billing.phone) !== null && _printData$billing$ph !== void 0 ? _printData$billing$ph : '';\n      if (actionType === 'share-whatsapp') {\n        if (phoneNumber === '' || confirm(\"Do you want to use another phone number to send the receipt?\")) {\n          const setPhoneNumber = prompt(\"Please enter the phone number with country code (example +351) to send the receipt:\");\n          if (setPhoneNumber) {\n            phoneNumber = setPhoneNumber.replaceAll(/\\s/g, '');\n          }\n        }\n      }\n      if (actionType !== 'share-whatsapp' || actionType === 'share-whatsapp' && phoneNumber !== '') {\n        await generateReceiptPDF(printData, partialPaymentData.settings, partialPaymentId, actionType, phoneNumber);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n\n    // end process\n    generateReceipt.hide();\n    receiptAction.show();\n  });\n});\n\n//# sourceURL=webpack://wepos/./assets/src/utils/partialPaymentStatsReceipt.js?")}},__webpack_exports__={};__webpack_modules__["./assets/src/utils/partialPaymentStatsReceipt.js"]()})();